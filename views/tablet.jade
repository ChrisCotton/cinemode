!!! 5

include shared
include simpleCart

html(lang="en")
  head
    title Control
    
    meta(charset="utf-8")
    
    mixin socketioH()
    mixin jqueryH()
    mixin jqueryuiH()
    mixin bootstrapH()
    mixin simpleCartH()
    // mixin bootstrapSliderH()
    script
      var host = "!{global.host}"
    
    style
      * {
        padding: 0px;
        margin: 0px;
      }
      
      body{
        width: 100%;
        overflow-x: hidden;
      }
      .item_desc{
        width:700px;
      }
      #product_img_list {
        position: absolute;
        display: block;
        left: -100px;
        width: 10000px;
        height: 400px; 
        overflow-x: hidden;
        overflow-y: hidden;
        white-space: nowrap; /* for singel line T^T */
        padding: 0px;
        margin: 0px;
      }
      #product_img_list li{
        display: inline;
        list-style-type: none;
        border: 0px solid black;
        padding:0px;
        margin: 0px;
      }  
      .product{
        display: inline-block;
        width: 400px;
        height: 280px;
        text-align: center;
        
        -webkit-transition: all 0.25s ease;
        -moz-transition: all 0.25s ease;
        -o-transition: all 0.25s ease;
        -ms-transition: all 0.25s ease;
        transition: all 0.25s ease;
      }
      
      .product_img{
        width: 160px;
        height:160px;
        margin: 60px 80px;
        padding: 0px;
        
        /*
        border: 1px solid #ccc; 
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        */
        -webkit-transition: all 0.25s ease;
        -moz-transition: all 0.25s ease;
        -o-transition: all 0.25s ease;
        -ms-transition: all 0.25s ease;
        transition: all 0.25s ease;
        
        /*
        filter: saturate(20%);
        -webkit-filter: saturate(20%);
        -moz-filter: saturate(20%);
        -o-filter: saturate(20%);
        -ms-filter: saturate(20%);
        */
      }
      
      .product_img:hover {
        -webkit-transform: scale(1.5);
        -moz-transform: scale(1.5);
        -o-transform: scale(1.5);
        -ms-transform: scale(1.5);
        transform: scale(1.5);
        cursor: pointer;
         
        filter: saturate(100%);
        -webkit-filter: saturate(100%);
        -moz-filter: saturate(100%);
        -o-filter: saturate(100%);
        -ms-filter: saturate(100%);
        
        /*
        -webkit-box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
        -moz-box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
        box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
        */
      }
      
      #control {
        position:absolute;
        top: 500px;
        width:100%;
      }
  body   
    //- p#room room: 
    div(style="padding: 40px; ")
        
    div(style="position:relative;")
      //- div(style="position:absolute; ")
      ul#product_img_list
        //- each p, i in products
        //-   li 
        //-     mixin product(i,p)  
    div#control
      div(style="position:static; margin:0px auto; width:400px")
        
        p#time(style="display:inline-block;")
        #volume_slider(style="display:inline-block; margin:5px 0px; width:40px; float:right")
          
        #time_slider(style="width:400px; margin: 7px 0px;")
          
        .btn-group(style="display:inline-block;")
          a.btn(onclick="remote_video_prev()", href="#")
            i.icon-step-backward
          a.btn(onclick="remote_video_play()", href="#") 
            i.icon-play
          button.btn(onclick="remote_video_pause()", href="#") 
            i.icon-pause
          button.btn(onclick="remote_video_next()", href="#") 
            i.icon-step-forward
          //- button.btn(onclick="remote_video_like()", href="#") 
          //-   i.icon-thumbs-up
          //- .simpleCart_items
        a.btn.pull-right.simpleCart_checkout(href="javascript:;")  Checkout
          
        p#info
        //- input(id='testpos', type='text', value='1')
        //- button(id='testbtn') test
        //- button(onclick="socket.emit('video:volume_ask')") vol
    script
      var products = !{JSON.stringify(products )} ;

    :coffeescript
      this.tag = (n, inner) -> 
        x = $( document.createElement(n) )
        return x if(typeof inner == 'undefined')
        if( Array.isArray inner ) 
          for i in inner 
            x.append i
        else
          x.append inner
        return x  
      
      this.spanTag = (inner) -> tag('span',inner)
      this.divTag = (inner) -> tag('div',inner)
      this.pTag = (inner) -> tag('p', inner)
      this.brTag = () -> tag('br')
      
      this.mkLikeBtn = (n) ->
        p   = tag('p').html("#{n} &nbsp;")
        p.css('display', 'inline-block')
        btn = tag('a').addClass('btn-link').text('Likes')
        btn.on 'click', () ->
          btn.text('Liked')
          p.html "#{n+1} &nbsp;"
        divTag().append(p).append(btn)
          
    :coffeescript
      this.socket         = io.connect()
      this.time_slider    = $('#time_slider')
      this.time_p         = $('p#time')
      this.volume_slider  = $('#volume_slider')
      this.product_img_list = $('#product_img_list')
      this.info           = $('p#info')
      
      products.forEach (p,i) -> 
        d = divTag().addClass('product')
        d.append (tag 'img').addClass('product_img').attr('src', p.img)
        d.append mkLikeBtn( (101*i + 7) % 53 + 19)
        d.append (tag 'a').text('add to cart')
        product_img_list.append tag('li', d)
      
      
      $('#testbtn').on 'click', () ->
        v = $('#testpos').val()
        n = parseInt( v )
        centralize n
      
      this.centralize = (nth) ->
        sw = $(window).width()
        pos = sw/2 - (400*nth) + 200
        # alert "#{sw} #{nth} #{pos}"
        # enlarge center image
        ###
        cs = product_img_list.children()
        cs.forEach (c,i) ->
          alert 'work'
          img = c.child[0].child[0]
          alert (typeof img)
          if(i == nth)
            img.css('width', 200).css('height', 200)
          else
            img.css('width', 160).css('height', 160) 
        ###     
        product_img_list.animate( {left: pos}, 'fast' )
      
      this.setVolume = (v) -> 
        volume_slider.slider "option", "value", Math.round(100*v)
      
      this.setTime = (t) ->
        time_slider.slider "option", "value", t
      
      this.setDuration = (d) ->
        time_slider.slider "option", "max", d
        
      this.getDuration = () ->
        time_slider.slider "option", "max"
      
      secToMin = (s) ->
        m = Math.floor( s / 60 )
        s = Math.round( s % 60 )
        s = "0" + s if s < 10
        "#{m}:#{s}"
      
      this.setTimeP = (t) ->
        time_p.text ( secToMin(t) + "/" + secToMin( getDuration() ) )
        
      # setup widget
      this.timeControlMode = false
      time_slider.slider { 
        min: 0 
        , 
        start: () -> timeControlMode = true
        , 
        stop:  () -> timeControlMode = false
        ,
        slide: (ev, ui) ->
          setTimeP ui.value
          socket.emit 'video:current_time', ui.value
        ,
        change: (ev,ui) ->
          pos = $(document).width() - 110*products.length
          # product_img_list.css('left', 0 )
        }
      socket.emit 'video:duration_ask'
      
      
      volume_slider.slider { 
        max: 100
        , 
        min: 0
        , 
        step: 1
        , 
        slide: (ev,ui) -> 
          socket.emit 'video:volume', ui.value / 100
        }
      socket.emit 'video:volume_ask'
      
      # command
      this.remote_video_play  = () -> socket.emit 'video:play'
      this.remote_video_pause = () -> socket.emit 'video:pause'
      this.remote_video_stop  = () -> socket.emit 'video:stop'
      this.remote_video_like  = () -> socket.emit 'video:like'
      this.remote_video_next  = () -> socket.emit 'video:next'
      this.remote_video_prev  = () -> socket.emit 'video:prev'
      
      # info
      #socket.on 'video:ended', () -> socket.emit 'video:duration_ask'
      socket.on 'video:loaded_metadata', () -> socket.emit 'video:duration_ask'
      socket.on 'video:volume_change', (v) -> setVolume v
      # 
      socket.on 'video:duration_reply', (d) -> setDuration d
      socket.on 'video:volume_reply', (v) -> setVolume v
        
    :coffeescript
      socket.on 'video:time', (t) ->
        if ! timeControlMode
          setTimeP t # set time text
          setTime t  # set slider
        
        b = true
        for i in [1..products.length-1]
          # alert "#{products[i].start} #{t} #{products[i].start}"
          if products[i-1].start <= t < products[i].start
            centralize i
            b = false
            break
        if b
          centralize products.length
      
    :coffeescript
      # alert "#{Object.keys products[0]}"
      socket.on 'room:reply', (data) -> $('#room').append data
      socket.emit 'room:ask'
      socket.emit 'ready'