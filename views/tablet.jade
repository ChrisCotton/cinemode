!!! 5
include shared

html(lang="en")
  head
    title Control
    
    meta(charset="utf-8")
    
    mixin socketioH()
    mixin jqueryH()
    mixin jqueryuiH()
    mixin bootstrapH()
    mixin simpleCartH()
    // mixin bootstrapSliderH()
    
    script
      var host = !{global.host}
      simpleCart({
        cartColumns: [
            { attr: "name" , label: "Name" },
            { attr: "price" , label: "Price", view: 'currency' },
            { view: "decrement" , label: false },
            { attr: "quantity" , label: "Qty" },
            { view: "increment" , label: false },
            { attr: "total" , label: "SubTotal", view: 'currency' },
            { view: "remove" , text: "Remove" , label: false }
        ],
        
        // "div" or "table" - builds the cart as a table or collection of divs
        cartStyle: "table", 
        
        // how simpleCart should checkout, see the checkout reference for more info 
        checkout: { 
            type: "PayPal" , 
            email: "you@yours.com" 
        },
        
        // set the currency, see the currency reference for more info
        currency: "USD",
        
        // collection of arbitrary data you may want to store with the cart, 
        // such as customer info
        data: {},
        
        // set the cart langauge (may be used for checkout)
        language: "english-us",
        
        // array of item fields that will not be sent to checkout
        excludeFromCheckout: [],
          
        // custom function to add shipping cost
        shippingCustom: null,
          
        // flat rate shipping option
        shippingFlatRate: 0,
        
        // added shipping based on this value multiplied by the cart quantity
        shippingQuantityRate: 0,
        
        // added shipping based on this value multiplied by the cart subtotal
        shippingTotalRate: 0,
        
        // tax rate applied to cart subtotal
        taxRate: 0,
        
        // true if tax should be applied to shipping
        taxShipping: false,
        
        // event mixinbacks 
        beforeAdd               : null,
        afterAdd                : null,
        load                    : null,
        beforeSave              : null,
        afterSave               : null,
        update                  : null,
        ready                   : null,
        checkoutSuccess             : null,
        checkoutFail                : null,
        beforeCheckout              : null
      }); 
      
    style
      .product{
        border-style: solid;
        border-width: 0px;
        border-color: gray;
      }
      
      table{
        width: 100%;
      }
      
      .item_desc{
        width:700px;
      }
      #product_img_list {
        position: absolute;
        display: block;
        left: -100px;
        width: 100%;
        height: 300px; 
        overflow-x: hidden;
        overflow-y: hidden;
        white-space: nowrap; /* for singel line T^T */
        padding: 0px;
        margin: 0px;
      }
      #product_img_list li{
        display: inline;
        list-style-type: none;
        border: 1px solid black;
        padding:0px;
        margin: 0px;
      }  
      .product_img{
        width:160px;
        height:160px;
        margin: 60px 80px;
        padding: 0px;
        border: 1px solid #ccc; 
        /*
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        */
        -webkit-transition: all 0.25s ease;
        -moz-transition: all 0.25s ease;
        -o-transition: all 0.25s ease;
        -ms-transition: all 0.25s ease;
        transition: all 0.25s ease;
        
        /*
        filter: saturate(20%);
        -webkit-filter: saturate(20%);
        -moz-filter: saturate(20%);
        -o-filter: saturate(20%);
        -ms-filter: saturate(20%);
        */
      }
      
      .product_img:hover {
        -webkit-transform: scale(1.1);
        -moz-transform: scale(1.1);
        -o-transform: scale(1.1);
        -ms-transform: scale(1.1);
        transform: scale(1.1);
        cursor: pointer;
         
        filter: saturate(100%);
        -webkit-filter: saturate(100%);
        -moz-filter: saturate(100%);
        -o-filter: saturate(100%);
        -ms-filter: saturate(100%);
        
        /*
        -webkit-box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
        -moz-box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
        box-shadow: 0px 0px 5px rgba(0,0,0,0.2);
        */
        }
  body
    
    div(style="padding: 40px; ")
        
    div(style="position:relative;")
      //- div(style="position:absolute; ")
      ul#product_img_list
        each p, i in products
          li 
            mixin product(i,p)  
    div(style="position:absolute;top:400px;width:100%;")
      div(style="position:static; margin:0px auto; width:400px")
        
        p#time(style="display:inline-block;")
        #volume_slider(style="display:inline-block; margin:5px 0px; width:40px; float:right")
          
        #time_slider(style="width:400px; margin: 7px 0px")
          
        .btn-group(style="display:inline-block;")
          a.btn(onclick="remote_video_prev()", href="#")
            i.icon-step-backward
          a.btn(onclick="remote_video_play()", href="#") 
            i.icon-play
          button.btn(onclick="remote_video_pause()", href="#") 
            i.icon-pause
          button.btn(onclick="remote_video_next()", href="#") 
            i.icon-step-forward
          //- button.btn(onclick="remote_video_like()", href="#") 
          //-   i.icon-thumbs-up
          //- .simpleCart_items
        a.btn.pull-right.simpleCart_checkout(href="javascript:;")  Checkout
          
        p#info
        //- button(onclick="socket.emit('video:volume_ask')") vol
    script
      var num_product = #{products.length};
    
    :coffeescript
      this.socket         = io.connect()
      this.time_slider    = $('#time_slider')
      this.time_p         = $('p#time')
      this.volume_slider  = $('#volume_slider')
      this.product_img_list = $('#product_img_list')
      
     
      
      this.setVolume = (v) -> 
        volume_slider.slider "option", "value", Math.round(100*v)
      
      this.setTime = (t) ->
        time_slider.slider "option", "value", t
      
      this.setDuration = (d) ->
        time_slider.slider "option", "max", d
        
      this.getDuration = () ->
        time_slider.slider "option", "max"
      
      secToMin = (s) ->
        m = Math.floor( s / 60 )
        s = Math.round( s % 60 )
        s = "0" + s if s < 10
        "#{m}:#{s}"
      
      this.setTimeP = (t) ->
        time_p.text ( secToMin(t) + "/" + secToMin( getDuration() ) )
        
      # setup widget
      $('.product').hide()
      
      this.timeControlMode = false
      time_slider.slider { 
        min: 0 
        , 
        start: () -> timeControlMode = true
        , 
        stop:  () -> timeControlMode = false
        ,
        slide: (ev, ui) ->
          setTimeP ui.value
          socket.emit 'video:current_time', ui.value
        ,
        change: (ev,ui) ->
          pos = $(document).width() - 110*num_product
          product_img_list.css('left', -500 )
        }
      socket.emit 'video:duration_ask'
      
      
      volume_slider.slider { 
        max: 100
        , 
        min: 0
        , 
        step: 1
        , 
        slide: (ev,ui) -> 
          socket.emit 'video:volume', ui.value / 100
        }
      socket.emit 'video:volume_ask'
      
      # command
      this.remote_video_play  = () -> socket.emit 'video:play'
      this.remote_video_pause = () -> socket.emit 'video:pause'
      this.remote_video_stop  = () -> socket.emit 'video:stop'
      this.remote_video_like  = () -> socket.emit 'video:like'
      this.remote_video_next  = () -> socket.emit 'video:next'
      this.remote_video_prev  = () -> socket.emit 'video:prev'
      
      # info
      #socket.on 'video:ended', () -> socket.emit 'video:duration_ask'
      socket.on 'video:loaded_metadata', () -> socket.emit 'video:duration_ask'
      socket.on 'video:volume_change', (v) -> setVolume v
      # 
      socket.on 'video:duration_reply', (d) -> setDuration d
      socket.on 'video:volume_reply', (v) -> setVolume v
        
    script
      socket.on('video:time', function(t){
        if( ! timeControlMode){
          setTimeP(t); 
          setTime(t);
        }
        
        $('.product').hide();
        if( t < 0 ){
          // unexpedted
        }else if( t < 10 ){
          $('div#product0').show();
        }else if( t < 20){
          $('div#product1').show();
        }else{
          $('div#product2').show();1
        }
      });
      
    :coffeescript
      socket.emit 'ready'